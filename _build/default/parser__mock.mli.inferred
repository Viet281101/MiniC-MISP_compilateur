type token =
    Lxor
  | Lwhile
  | Lvar of string
  | Ltype of Ast.type_t
  | Lsub_assign
  | Lsub
  | Lstring of string
  | Lsrl
  | Lsll
  | Lscanf
  | Lsc
  | Lreturn
  | Lprintf
  | Lprint_str
  | Lprint_nl
  | Lprint_int
  | Lprint_bool
  | Lor
  | Lopar
  | Locbra
  | Lnot
  | Lneq
  | Lmul_assign
  | Lmul
  | Lmod
  | Llte
  | Llt
  | Lint of int
  | Lif
  | Lgte
  | Lgt
  | Lexit
  | Leq
  | Lend
  | Lelse
  | Ldiv_assign
  | Ldiv
  | Lcpar
  | Lcomma
  | Lccbra
  | Lbool of bool
  | Lassign
  | Land
  | Ladd_assign
  | Ladd
val menhir_begin_marker : int
val xv_var_decl : string list
val xv_value : Ast.Syntax.value
val xv_start : Ast.Syntax.prog
val xv_prog : Ast.Syntax.prog
val xv_operator : Ast.Syntax.expr
val xv_instrs : Ast.Syntax.block
val xv_instr : Ast.Syntax.instr
val xv_expr_list : Ast.Syntax.expr list
val xv_expr : Ast.Syntax.expr
val xv_def : Ast.Syntax.def
val xv_decl_instr : Ast.Syntax.instr list
val xv_args : (Ast.type_t * string) list
val xv_arg : Ast.type_t * string
val menhir_end_marker : int
